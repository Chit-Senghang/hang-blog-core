name: Deploy to server
on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependency
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Run Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependency
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Let Build
        run: yarn build

      - name: Upload Artiface
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
    steps:
      - name: Download Files
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: dist

      - name: Verification SSH
        run: bash ./scripts/verification-ssh.sh

      - name: Deploy Server
        run: |
          bash ./scripts/connect-server.sh
          rsync -avz ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/root/deploy
