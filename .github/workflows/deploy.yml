name: Deploy Without Docker
on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      content: write
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependency
        run: |
          mkdir -p ~/.cache
          cp -r node_modules ~/.cache/

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    permissions:
      id_token: write
      content: write
    needs: lint
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependency
        run: |
          mkdir -p ~/.cache
          cp -r node_modules ~/.cache/

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Let Build
        run: yarn build

      # - name: Upload Artiface
      #   run: |
      #     mkdir -p dist_files
      #     cp -r dist dist_files/
      #     cp package.json dist_files/
      #   continue-on-error: true

      # - name: Archive artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: dist-files
      #     path: dist_files

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
    # steps:
    #   - name: Download Files
    #     uses: actions/download-artifact@v2
    #     with:
    #       name: dist-files
    #       path: dist_files

      - name: Verification SSH
        run: bash ./scripts/verification-ssh.sh

      - name: Deploy Server
        run: |
          bash ./scripts/connect-server.sh
          rsync -avz ./dist_files/ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/root/deploy
